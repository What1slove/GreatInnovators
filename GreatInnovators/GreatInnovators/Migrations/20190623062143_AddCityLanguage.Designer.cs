// <auto-generated />
using System;
using GreatInnovators.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GreatInnovators.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190623062143_AddCityLanguage")]
    partial class AddCityLanguage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GreatInnovators.Models.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("GreatInnovators.Models.Guide", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AdditionalInfo");

                    b.Property<int>("Age");

                    b.Property<string>("Country");

                    b.Property<string>("Email");

                    b.Property<string>("FilePath");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Password");

                    b.Property<string>("PhoneNumber");

                    b.Property<double>("Rating");

                    b.HasKey("Id");

                    b.ToTable("Hospitals");
                });

            modelBuilder.Entity("GreatInnovators.Models.GuideCity", b =>
                {
                    b.Property<Guid>("GuideId");

                    b.Property<Guid>("CityId");

                    b.HasKey("GuideId", "CityId");

                    b.HasIndex("CityId");

                    b.ToTable("GuideCities");
                });

            modelBuilder.Entity("GreatInnovators.Models.GuideLanguage", b =>
                {
                    b.Property<Guid>("GuideId");

                    b.Property<Guid>("LanguageId");

                    b.HasKey("GuideId", "LanguageId");

                    b.HasIndex("LanguageId");

                    b.ToTable("GuideLanguages");
                });

            modelBuilder.Entity("GreatInnovators.Models.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("GreatInnovators.Models.GuideCity", b =>
                {
                    b.HasOne("GreatInnovators.Models.City", "City")
                        .WithMany("GuideCities")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreatInnovators.Models.Guide", "Guide")
                        .WithMany("GuideCities")
                        .HasForeignKey("GuideId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("GreatInnovators.Models.GuideLanguage", b =>
                {
                    b.HasOne("GreatInnovators.Models.Guide", "Guide")
                        .WithMany("GuideLanguages")
                        .HasForeignKey("GuideId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("GreatInnovators.Models.Language", "Language")
                        .WithMany("GuideLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
